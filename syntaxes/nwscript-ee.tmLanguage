<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>Neverwinter Script</string>
    <key>scopeName</key>
    <string>source.nss</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#preprocessor-rule-enabled</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#preprocessor-rule-disabled</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#preprocessor-rule-conditional</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#comments</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#switch_statement</string>
      </dict>
      <dict>
        <key>match</key>
        <string>\b(break|continue|do|else|for|goto|if|default|return|while)\b</string>
        <key>name</key>
        <string>keyword.control.nss</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#storage_types</string>
      </dict>
      <dict>
        <key>match</key>
        <string>\b_{0,1}[A-Z0-9]+(_[A-Z0-9]+)*(_[a-zA-Z0-9]+){0,1}_{0,1}(?!\()\b</string>
        <key>name</key>
        <string>constant.language.nss</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#operators</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#numbers</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#strings</string>
      </dict>
      <dict>
        <key>begin</key>
        <string>^\s*((#)\s*(include(?:_next)?|import))\b\s*</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.directive.$3.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.directive.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=(?://|/\*))|(?&lt;!\\)(?=\n)</string>
        <key>name</key>
        <string>meta.preprocessor.include.nss</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#line_continuation_character</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>"</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>"</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.double.include.nss</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>&lt;</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>&gt;</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.other.lt-gt.include.nss</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>include</key>
        <string>#pragma-mark</string>
      </dict>
      <dict>
        <key>begin</key>
        <string>^\s*((#)\s*line)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.directive.line.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.directive.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=(?://|/\*))|(?&lt;!\\)(?=\n)</string>
        <key>name</key>
        <string>meta.preprocessor.nss</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_continuation_character</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>begin</key>
        <string>^\s*(?:((#)\s*pragma))\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.directive.pragma.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.directive.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=(?://|/\*))|(?&lt;!\\)(?=\n)</string>
        <key>name</key>
        <string>meta.preprocessor.pragma.nss</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>match</key>
            <string>[a-zA-Z_$][\w\-$]*</string>
            <key>name</key>
            <string>entity.other.attribute-name.pragma.preprocessor.nss</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_continuation_character</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>include</key>
        <string>#block</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#parens</string>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.function.nss</string>
        <key>begin</key>
        <string>(?&lt;!\w)(?!\s*(?:)\s*\()(?=[a-zA-Z_]\w*\s*\()</string>
        <key>end</key>
        <string>(?!\G)(?&lt;=\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-innards</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>include</key>
        <string>#line_continuation_character</string>
      </dict>
      <dict>
        <key>match</key>
        <string>;</string>
        <key>name</key>
        <string>punctuation.terminator.statement.nss</string>
      </dict>
      <dict>
        <key>match</key>
        <string>,</string>
        <key>name</key>
        <string>punctuation.separator.delimiter.nss</string>
      </dict>
      <dict>
        <key>match</key>
        <string>,</string>
        <key>name</key>
        <string>variable.separator.delimiter.nss</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#dot-access</string>
      </dict>
      <dict>
        <key>match</key>
        <string>\b[a-zA-Z_][a-zA-Z_0-9]*\b(?!\s*\()</string>
        <key>name</key>
        <string>variable.language.nss</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>dot-access</key>
      <dict>
        <key>match</key>
        <string>(\.)([a-zA-Z_][a-zA-Z_0-9]*\b(?!\s*\())</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.dot-access.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.other.attribute-name.nss</string>
          </dict>
        </dict>
      </dict>
      <key>backslash_escapes</key>
      <dict>
        <key>match</key>
        <string>(?x)\\ (
\\			 |
[abefnprtv'"?]   |
[0-3][0-7]{,2}	 |
[4-7]\d?		|
x[a-fA-F0-9]{,2} |
u[a-fA-F0-9]{,4} |
U[a-fA-F0-9]{,8} )</string>
        <key>name</key>
        <string>constant.character.escape.nss</string>
      </dict>
      <key>block</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.begin.bracket.curly.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>}|(?=\s*#\s*(?:elif|else|endif)\b)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.end.bracket.curly.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>meta.block.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#block_innards</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>block_innards</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#preprocessor-rule-enabled-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#preprocessor-rule-disabled-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#preprocessor-rule-conditional-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#dot-access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#nwscript_function_call</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.initialization.nss</string>
            <key>begin</key>
            <string>(?x)
(?:
  (?:
	(?=\s)(?&lt;!else|return)
	(?&lt;=\w) \s+()  # or word + space before name
  )
)
(
  (?:[A-Za-z_][A-Za-z0-9_]*+ | :: )++   # actual name
  |
  (?:(?&lt;=operator) (?:[-*&amp;&lt;&gt;=+!]+ | \(\) | \[\]))
)
\s*(\() # opening bracket</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.other.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.begin.bracket.round.initialization.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.end.bracket.round.initialization.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#function-call-innards</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.begin.bracket.curly.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>}|(?=\s*#\s*(?:elif|else|endif)\b)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.end.bracket.curly.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#block_innards</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#parens-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>$base</string>
          </dict>
        </array>
      </dict>
      <key>nwscript_conditional_context</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block_innards</string>
          </dict>
        </array>
      </dict>
      <key>nwscript_function_call</key>
      <dict>
        <key>begin</key>
        <string>(?x)
(?!(?:while|for|do|if|else|switch|return)\s*\()
(?=
(?:[A-Za-z_][A-Za-z0-9_]*+|::)++\s*\(  # actual name
|
(?:(?&lt;=operator)(?:[-*&amp;&lt;&gt;=+!]+|\(\)|\[\]))\s*\(
)</string>
        <key>end</key>
        <string>(?&lt;=\))(?!\w)</string>
        <key>name</key>
        <string>meta.function-call.nss</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-call-innards</string>
          </dict>
        </array>
      </dict>
      <key>case_statement</key>
      <dict>
        <key>name</key>
        <string>meta.conditional.case.nss</string>
        <key>begin</key>
        <string>((?&gt;(?:(?:(?&gt;(?&lt;!\s)\s+)|(\/\*)((?&gt;(?:[^\*]|(?&gt;\*+)[^\/])*)((?&gt;\*+)\/)))+|(?:(?:(?:(?:\b|(?&lt;=\W))|(?=\W))|\A)|\Z))))((?&lt;!\w)case(?!\w))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#inline_comment</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss punctuation.definition.comment.begin.nss</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss</string>
          </dict>
          <key>4</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>\*\/</string>
                <key>name</key>
                <string>comment.block.nss punctuation.definition.comment.end.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\*</string>
                <key>name</key>
                <string>comment.block.nss</string>
              </dict>
            </array>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>keyword.control.case.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(:)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.case.nss</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#evaluation_context</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#nwscript_conditional_context</string>
          </dict>
        </array>
      </dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.line.double-slash.documentation.nss</string>
            <key>begin</key>
            <string>(?:^)(?&gt;\s*)(\/\/[!\/]+)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.documentation.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?&lt;=\n)(?&lt;!\\\n)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#line_continuation_character</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:callergraph|callgraph|else|endif|f\$|f\[|f\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\$|\#|&lt;|&gt;|%|"|\.|=|::|\||\-\-|\-\-\-)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>((?&lt;=[\s*!\/])[\\@](?:a|em|e))\s+(\S+)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>markup.italic.doxygen.nss</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>((?&lt;=[\s*!\/])[\\@]b)\s+(\S+)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>markup.bold.doxygen.nss</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>((?&lt;=[\s*!\/])[\\@](?:c|p))\s+(\S+)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>markup.inline.raw.string.nss</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>((?&lt;=[\s*!\/])[\\@]param)(?:\s*\[((?:,?\s*(?:in|out)\s*)+)\])?\s+(\b\w+\b)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>patterns</key>
                    <array>
                      <dict>
                        <key>match</key>
                        <string>in|out</string>
                        <key>name</key>
                        <string>keyword.other.parameter.direction.$0.nss</string>
                      </dict>
                    </array>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>variable.parameter.nss</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|todo|tparam|version|warning|xrefitem)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|uml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(?:\b[A-Z]+:|@[a-z_]+:)</string>
                <key>name</key>
                <string>storage.type.class.gtkdoc</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>(\/\*[!*]+(?=\s))(.+)([!*]*\*\/)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.begin.documentation.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>match</key>
                    <string>(?&lt;=[\s*!\/])[\\@](?:callergraph|callgraph|else|endif|f\$|f\[|f\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\$|\#|&lt;|&gt;|%|"|\.|=|::|\||\-\-|\-\-\-)\b(?:\{[^}]*\})?</string>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>((?&lt;=[\s*!\/])[\\@](?:a|em|e))\s+(\S+)</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>storage.type.class.doxygen.nss</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>markup.italic.doxygen.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>((?&lt;=[\s*!\/])[\\@]b)\s+(\S+)</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>storage.type.class.doxygen.nss</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>markup.bold.doxygen.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>((?&lt;=[\s*!\/])[\\@](?:c|p))\s+(\S+)</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>storage.type.class.doxygen.nss</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>markup.inline.raw.string.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(?&lt;=[\s*!\/])[\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\b(?:\{[^}]*\})?</string>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(?&lt;=[\s*!\/])[\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\b(?:\{[^}]*\})?</string>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>((?&lt;=[\s*!\/])[\\@]param)(?:\s*\[((?:,?\s*(?:in|out)\s*)+)\])?\s+(\b\w+\b)</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>storage.type.class.doxygen.nss</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>in|out</string>
                            <key>name</key>
                            <string>keyword.other.parameter.direction.$0.nss</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>variable.parameter.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(?&lt;=[\s*!\/])[\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|todo|tparam|version|warning|xrefitem)\b(?:\{[^}]*\})?</string>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(?&lt;=[\s*!\/])[\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|uml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\b(?:\{[^}]*\})?</string>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(?:\b[A-Z]+:|@[a-z_]+:)</string>
                    <key>name</key>
                    <string>storage.type.class.gtkdoc</string>
                  </dict>
                </array>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.end.documentation.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>comment.block.documentation.nss</string>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.block.documentation.nss</string>
            <key>begin</key>
            <string>((?&gt;\s*)\/\*[!*]+(?:(?:\n|$)|(?=\s)))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.begin.documentation.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>([!*]*\*\/)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.end.documentation.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:callergraph|callgraph|else|endif|f\$|f\[|f\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\$|\#|&lt;|&gt;|%|"|\.|=|::|\||\-\-|\-\-\-)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>((?&lt;=[\s*!\/])[\\@](?:a|em|e))\s+(\S+)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>markup.italic.doxygen.nss</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>((?&lt;=[\s*!\/])[\\@]b)\s+(\S+)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>markup.bold.doxygen.nss</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>((?&lt;=[\s*!\/])[\\@](?:c|p))\s+(\S+)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>markup.inline.raw.string.nss</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>((?&lt;=[\s*!\/])[\\@]param)(?:\s*\[((?:,?\s*(?:in|out)\s*)+)\])?\s+(\b\w+\b)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>storage.type.class.doxygen.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>patterns</key>
                    <array>
                      <dict>
                        <key>match</key>
                        <string>in|out</string>
                        <key>name</key>
                        <string>keyword.other.parameter.direction.$0.nss</string>
                      </dict>
                    </array>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>variable.parameter.nss</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|todo|tparam|version|warning|xrefitem)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=[\s*!\/])[\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|uml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\b(?:\{[^}]*\})?</string>
                <key>name</key>
                <string>storage.type.class.doxygen.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(?:\b[A-Z]+:|@[a-z_]+:)</string>
                <key>name</key>
                <string>storage.type.class.gtkdoc</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>^\/\* =(\s*.*?)\s*= \*\/$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.toc-list.banner.block.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>comment.block.banner.nss</string>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.block.nss</string>
            <key>begin</key>
            <string>(\/\*)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.begin.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\*\/)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.end.nss</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>^\/\/ =(\s*.*?)\s*=$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.toc-list.banner.line.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>comment.line.banner.nss</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>((?:^[ \t]+)?)(?=\/\/)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?!\G)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>comment.line.double-slash.nss</string>
                <key>begin</key>
                <string>(\/\/)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=\n)</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#line_continuation_character</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>default_statement</key>
      <dict>
        <key>name</key>
        <string>meta.conditional.case.nss</string>
        <key>begin</key>
        <string>((?&gt;(?:(?:(?&gt;(?&lt;!\s)\s+)|(\/\*)((?&gt;(?:[^\*]|(?&gt;\*+)[^\/])*)((?&gt;\*+)\/)))+|(?:(?:(?:(?:\b|(?&lt;=\W))|(?=\W))|\A)|\Z))))((?&lt;!\w)default(?!\w))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#inline_comment</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss punctuation.definition.comment.begin.nss</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss</string>
          </dict>
          <key>4</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>\*\/</string>
                <key>name</key>
                <string>comment.block.nss punctuation.definition.comment.end.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\*</string>
                <key>name</key>
                <string>comment.block.nss</string>
              </dict>
            </array>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>keyword.control.default.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(:)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.case.default.nss</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#evaluation_context</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#nwscript_conditional_context</string>
          </dict>
        </array>
      </dict>
      <key>disabled</key>
      <dict>
        <key>begin</key>
        <string>^\s*#\s*if(n?def)?\b.*$</string>
        <key>end</key>
        <string>^\s*#\s*endif\b</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#disabled</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#pragma-mark</string>
          </dict>
        </array>
      </dict>
      <key>evaluation_context</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-call-innards</string>
          </dict>
          <dict>
            <key>include</key>
            <string>$base</string>
          </dict>
        </array>
      </dict>
      <key>function-call-innards</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#storage_types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#dot-access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?x)
(?!(?:while|for|do|if|else|switch|return)\s*\()
(
(?:[A-Za-z_][A-Za-z0-9_]*+|::)++  # actual name
|
(?:(?&lt;=operator)(?:[-*&amp;&lt;&gt;=+!]+|\(\)|\[\]))
)
\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.arguments.begin.bracket.round.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.arguments.end.bracket.round.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#function-call-innards</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.begin.bracket.round.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.end.bracket.round.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#function-call-innards</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#block_innards</string>
          </dict>
        </array>
      </dict>
      <key>function-innards</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#storage_types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function.definition.parameters.nss</string>
            <key>begin</key>
            <string>(?x)
(?!(?:while|for|do|if|else|switch|return)\s*\()
(
(?:[A-Za-z_][A-Za-z0-9_]*+|::)++  # actual name
|
(?:(?&lt;=operator)(?:[-*&amp;&lt;&gt;=+!]+|\(\)|\[\]))
)
\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parameters.begin.bracket.round.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parameters.end.bracket.round.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#probably_a_parameter</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#probably_a_default_parameter</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#function-innards</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.begin.bracket.round.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.end.bracket.round.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#function-innards</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>$base</string>
          </dict>
        </array>
      </dict>
      <key>inline_comment</key>
      <dict>
        <key>match</key>
        <string>(\/\*)((?&gt;(?:[^\*]|(?&gt;\*+)[^\/])*)((?&gt;\*+)\/))</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss punctuation.definition.comment.begin.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss</string>
          </dict>
          <key>3</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>\*\/</string>
                <key>name</key>
                <string>comment.block.nss punctuation.definition.comment.end.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\*</string>
                <key>name</key>
                <string>comment.block.nss</string>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>line_continuation_character</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\\)\n</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.character.escape.line-continuation.nss</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>numbers</key>
      <dict>
        <key>match</key>
        <string>(?&lt;!\w)\.?\d(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-])*</string>
        <key>captures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>(?=.)</string>
                <key>end</key>
                <string>$</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>match</key>
                    <string>(\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?&lt;=[0-9a-fA-F])\.|\.(?=[0-9a-fA-F])))([0-9a-fA-F](?:[0-9a-fA-F]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?&lt;!')([pP])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?([lLfF](?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.hexadecimal.nss</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.hexadecimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>punctuation.separator.constant.numeric</string>
                      </dict>
                      <key>4</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.hexadecimal.nss</string>
                      </dict>
                      <key>5</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.hexadecimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>6</key>
                      <dict>
                        <key>name</key>
                        <string>punctuation.separator.constant.numeric</string>
                      </dict>
                      <key>8</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.exponent.hexadecimal.nss</string>
                      </dict>
                      <key>9</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.plus.exponent.hexadecimal.nss</string>
                      </dict>
                      <key>10</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.minus.exponent.hexadecimal.nss</string>
                      </dict>
                      <key>11</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.exponent.hexadecimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>12</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.suffix.floating-point.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?&lt;=[0-9])\.|\.(?=[0-9])))([0-9](?:[0-9]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?&lt;!')([eE])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?([lLfF](?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.decimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>punctuation.separator.constant.numeric</string>
                      </dict>
                      <key>4</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.decimal.point.nss</string>
                      </dict>
                      <key>5</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.decimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>6</key>
                      <dict>
                        <key>name</key>
                        <string>punctuation.separator.constant.numeric</string>
                      </dict>
                      <key>8</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.exponent.decimal.nss</string>
                      </dict>
                      <key>9</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.plus.exponent.decimal.nss</string>
                      </dict>
                      <key>10</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.minus.exponent.decimal.nss</string>
                      </dict>
                      <key>11</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.exponent.decimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>12</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.suffix.floating-point.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(\G0[bB])([01](?:[01]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.binary.nss</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.binary.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>punctuation.separator.constant.numeric</string>
                      </dict>
                      <key>4</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.suffix.integer.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(\G0)((?:[0-7]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))+)((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.octal.nss</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.octal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>punctuation.separator.constant.numeric</string>
                      </dict>
                      <key>4</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.suffix.integer.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?&lt;!')([pP])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.hexadecimal.nss</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.hexadecimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>punctuation.separator.constant.numeric</string>
                      </dict>
                      <key>5</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.exponent.hexadecimal.nss</string>
                      </dict>
                      <key>6</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.plus.exponent.hexadecimal.nss</string>
                      </dict>
                      <key>7</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.minus.exponent.hexadecimal.nss</string>
                      </dict>
                      <key>8</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.exponent.hexadecimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>9</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.suffix.integer.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?&lt;!')([eE])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.decimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>punctuation.separator.constant.numeric</string>
                      </dict>
                      <key>5</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.exponent.decimal.nss</string>
                      </dict>
                      <key>6</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.plus.exponent.decimal.nss</string>
                      </dict>
                      <key>7</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.minus.exponent.decimal.nss</string>
                      </dict>
                      <key>8</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.exponent.decimal.nss</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>punctuation.separator.constant.numeric</string>
                          </dict>
                        </array>
                      </dict>
                      <key>9</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.other.unit.suffix.integer.nss</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-])+</string>
                    <key>name</key>
                    <string>invalid.illegal.constant.numeric</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>--</string>
            <key>name</key>
            <string>keyword.operator.decrement.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\+\+</string>
            <key>name</key>
            <string>keyword.operator.increment.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>%=|\+=|-=|\*=|(?&lt;!\()/=</string>
            <key>name</key>
            <string>keyword.operator.assignment.compound.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|\|=</string>
            <key>name</key>
            <string>keyword.operator.assignment.compound.bitwise.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>&lt;&lt;|&gt;&gt;</string>
            <key>name</key>
            <string>keyword.operator.bitwise.shift.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>!=|&lt;=|&gt;=|==|&lt;|&gt;</string>
            <key>name</key>
            <string>keyword.operator.comparison.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>&amp;&amp;|!|\|\|</string>
            <key>name</key>
            <string>keyword.operator.logical.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>&amp;|\||\^|~</string>
            <key>name</key>
            <string>keyword.operator.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>=</string>
            <key>name</key>
            <string>keyword.operator.assignment.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>%|\*|/|-|\+</string>
            <key>name</key>
            <string>keyword.operator.nss</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\?)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ternary.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(:)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ternary.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#function-call-innards</string>
              </dict>
              <dict>
                <key>include</key>
                <string>$base</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>parens</key>
      <dict>
        <key>name</key>
        <string>meta.parens.nss</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.parens.begin.bracket.round.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.parens.end.bracket.round.nss</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$base</string>
          </dict>
        </array>
      </dict>
      <key>parens-block</key>
      <dict>
        <key>name</key>
        <string>meta.parens.block.nss</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.parens.begin.bracket.round.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.parens.end.bracket.round.nss</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_innards</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?-mix:(?&lt;!:):(?!:))</string>
            <key>name</key>
            <string>punctuation.range-based.nss</string>
          </dict>
        </array>
      </dict>
      <key>pragma-mark</key>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.pragma.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.control.directive.pragma.pragma-mark.nss</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.directive.nss</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>entity.name.tag.pragma-mark.nss</string>
          </dict>
        </dict>
        <key>match</key>
        <string>^\s*(((#)\s*pragma\s+mark)\s+(.*))</string>
        <key>name</key>
        <string>meta.section.nss</string>
      </dict>
      <key>preprocessor-rule-conditional</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>^\s*((#)\s*if(?:n?def)?\b)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>^\s*((#)\s*endif\b)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
                <key>end</key>
                <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#preprocessor-rule-conditional-line</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-enabled-elif</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-enabled-else</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-disabled-elif</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*elif\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#preprocessor-rule-conditional-line</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>$base</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>^\s*#\s*(else|elif|endif)\b</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.stray-$1.nss</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-conditional-block</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>^\s*((#)\s*if(?:n?def)?\b)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>^\s*((#)\s*endif\b)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
                <key>end</key>
                <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#preprocessor-rule-conditional-line</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-enabled-elif-block</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-enabled-else-block</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-disabled-elif</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*elif\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#preprocessor-rule-conditional-line</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#block_innards</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>^\s*#\s*(else|elif|endif)\b</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.stray-$1.nss</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-conditional-line</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?:\bdefined\b\s*$)|(?:\bdefined\b(?=\s*\(*\s*(?:(?!defined\b)[a-zA-Z_$][\w$]*\b)\s*\)*\s*(?:\n|//|/\*|\?|\:|&amp;&amp;|\|\||\\\s*\n)))</string>
            <key>name</key>
            <string>keyword.control.directive.conditional.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\bdefined\b</string>
            <key>name</key>
            <string>invalid.illegal.macro-name.nss</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\?</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ternary.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>:</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ternary.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-conditional-line</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(NULL|true|false|TRUE|FALSE)\b</string>
            <key>name</key>
            <string>constant.language.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>[a-zA-Z_$][\w$]*</string>
            <key>name</key>
            <string>entity.name.function.preprocessor.nss</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#line_continuation_character</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.begin.bracket.round.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)|(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.end.bracket.round.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-conditional-line</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-define-line-blocks</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.begin.bracket.curly.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>}|(?=\s*#\s*(?:elif|else|endif)\b)|(?&lt;!\\)(?=\s*\n)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.end.bracket.curly.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-define-line-blocks</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-define-line-contents</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#preprocessor-rule-define-line-contents</string>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-define-line-contents</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.begin.bracket.curly.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>}|(?=\s*#\s*(?:elif|else|endif)\b)|(?&lt;!\\)(?=\s*\n)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.end.bracket.curly.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>meta.block.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-define-line-blocks</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>\(</string>
            <key>name</key>
            <string>punctuation.section.parens.begin.bracket.round.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\)</string>
            <key>name</key>
            <string>punctuation.section.parens.end.bracket.round.nss</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?x)
(?!(?:while|for|do|if|else|switch|return|void)\s*\()
(?=
  (?:[A-Za-z_][A-Za-z0-9_]*+|::)++\s*\(  # actual name
  |
  (?:(?&lt;=operator)(?:[-*&amp;&lt;&gt;=+!]+|\(\)|\[\]))\s*\(
)</string>
            <key>end</key>
            <string>(?&lt;=\))(?!\w)|(?&lt;!\\)(?=\s*\n)</string>
            <key>name</key>
            <string>meta.function.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-define-line-functions</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>"</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>"|(?&lt;!\\)(?=\s*\n)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.double.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string_escaped_char</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string_placeholder</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#line_continuation_character</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>'</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>'|(?&lt;!\\)(?=\s*\n)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.single.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string_escaped_char</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#line_continuation_character</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#dot-access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>$base</string>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-define-line-functions</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#storage_types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#dot-access</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?x)
(?!(?:while|for|do|if|else|switch|return)\s*\()
(
(?:[A-Za-z_][A-Za-z0-9_]*+|::)++  # actual name
|
(?:(?&lt;=operator)(?:[-*&amp;&lt;&gt;=+!]+|\(\)|\[\]))
)
\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.arguments.begin.bracket.round.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))|(?&lt;!\\)(?=\s*\n)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.arguments.end.bracket.round.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-define-line-functions</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.begin.bracket.round.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))|(?&lt;!\\)(?=\s*\n)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.parens.end.bracket.round.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-define-line-functions</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#preprocessor-rule-define-line-contents</string>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-disabled</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>^\s*((#)\s*if\b)(?=\s*\(*\b0+\b\)*\s*(?:$|//|/\*))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>^\s*((#)\s*endif\b)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
                <key>end</key>
                <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?=\n)</string>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#preprocessor-rule-conditional-line</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-enabled-elif</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-enabled-else</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-disabled-elif</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*elif\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:elif|else|endif)\b))</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>begin</key>
                    <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
                    <key>end</key>
                    <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                    <key>patterns</key>
                    <array>
                      <dict>
                        <key>include</key>
                        <string>#preprocessor-rule-conditional-line</string>
                      </dict>
                    </array>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>$base</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>\n</string>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:else|elif|endif)\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.if-branch.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-disabled-block</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>^\s*((#)\s*if\b)(?=\s*\(*\b0+\b\)*\s*(?:$|//|/\*))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>^\s*((#)\s*endif\b)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
                <key>end</key>
                <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?=\n)</string>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#preprocessor-rule-conditional-line</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-enabled-elif-block</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-enabled-else-block</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-disabled-elif</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*elif\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:elif|else|endif)\b))</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>begin</key>
                    <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
                    <key>end</key>
                    <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                    <key>patterns</key>
                    <array>
                      <dict>
                        <key>include</key>
                        <string>#preprocessor-rule-conditional-line</string>
                      </dict>
                    </array>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#block_innards</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>\n</string>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:else|elif|endif)\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.if-branch.in-block.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-disabled-elif</key>
      <dict>
        <key>begin</key>
        <string>^\s*((#)\s*elif\b)(?=\s*\(*\b0+\b\)*\s*(?:$|//|/\*))</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.nss</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.directive.conditional.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.directive.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=^\s*((#)\s*(?:elif|else|endif)\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
            <key>end</key>
            <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
            <key>name</key>
            <string>meta.preprocessor.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-conditional-line</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\n</string>
            <key>end</key>
            <string>(?=^\s*((#)\s*(?:else|elif|endif)\b))</string>
            <key>contentName</key>
            <string>comment.block.preprocessor.elif-branch.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#disabled</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#pragma-mark</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-enabled</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>^\s*((#)\s*if\b)(?=\s*\(*\b0*1\b\)*\s*(?:$|//|/\*))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.preprocessor.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>^\s*((#)\s*endif\b)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
                <key>end</key>
                <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?=\n)</string>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#preprocessor-rule-conditional-line</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*else\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*endif\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.else-branch.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*elif\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:else|elif|endif)\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.if-branch.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>\n</string>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:else|elif|endif)\b))</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>$base</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-enabled-block</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>^\s*((#)\s*if\b)(?=\s*\(*\b0*1\b\)*\s*(?:$|//|/\*))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>^\s*((#)\s*endif\b)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.conditional.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
                <key>end</key>
                <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?=\n)</string>
                <key>name</key>
                <string>meta.preprocessor.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#preprocessor-rule-conditional-line</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*else\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*endif\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.else-branch.in-block.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*elif\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:else|elif|endif)\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.if-branch.in-block.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>\n</string>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:else|elif|endif)\b))</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#block_innards</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-enabled-elif</key>
      <dict>
        <key>begin</key>
        <string>^\s*((#)\s*elif\b)(?=\s*\(*\b0*1\b\)*\s*(?:$|//|/\*))</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.nss</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.directive.conditional.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.directive.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=^\s*((#)\s*endif\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
            <key>end</key>
            <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
            <key>name</key>
            <string>meta.preprocessor.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-conditional-line</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\n</string>
            <key>end</key>
            <string>(?=^\s*((#)\s*(?:endif)\b))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*(else)\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*endif\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.elif-branch.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*(elif)\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:else|elif|endif)\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.elif-branch.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>$base</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-enabled-elif-block</key>
      <dict>
        <key>begin</key>
        <string>^\s*((#)\s*elif\b)(?=\s*\(*\b0*1\b\)*\s*(?:$|//|/\*))</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.nss</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.directive.conditional.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.directive.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=^\s*((#)\s*endif\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\G(?=.)(?!//|/\*(?!.*\\\s*\n))</string>
            <key>end</key>
            <string>(?=//)|(?=/\*(?!.*\\\s*\n))|(?&lt;!\\)(?=\n)</string>
            <key>name</key>
            <string>meta.preprocessor.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#preprocessor-rule-conditional-line</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\n</string>
            <key>end</key>
            <string>(?=^\s*((#)\s*(?:endif)\b))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*(else)\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*endif\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.elif-branch.in-block.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>^\s*((#)\s*(elif)\b)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>meta.preprocessor.nss</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.directive.conditional.nss</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.directive.nss</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=^\s*((#)\s*(?:else|elif|endif)\b))</string>
                <key>contentName</key>
                <string>comment.block.preprocessor.elif-branch.nss</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#disabled</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#pragma-mark</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#block_innards</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-enabled-else</key>
      <dict>
        <key>begin</key>
        <string>^\s*((#)\s*else\b)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.nss</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.directive.conditional.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.directive.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=^\s*((#)\s*endif\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$base</string>
          </dict>
        </array>
      </dict>
      <key>preprocessor-rule-enabled-else-block</key>
      <dict>
        <key>begin</key>
        <string>^\s*((#)\s*else\b)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.nss</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.directive.conditional.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.directive.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=^\s*((#)\s*endif\b))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_innards</string>
          </dict>
        </array>
      </dict>
      <key>probably_a_parameter</key>
      <dict>
        <key>match</key>
        <string>(?&lt;=(?:[a-zA-Z_0-9] |[&amp;*&gt;\]\)]))\s*([a-zA-Z_]\w*)\s*(?=(?:\[\]\s*)?(?:,|\)))</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.nss</string>
          </dict>
        </dict>
      </dict>
      <key>probably_a_default_parameter</key>
      <dict>
        <key>match</key>
        <string>(\b[a-zA-Z_][a-zA-Z_0-9]*\b) (=) </string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.nss</string>
          </dict>
        </dict>
      </dict>
      <key>storage_types</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(const){0,1} *\b(action|effect|event|float|int|itemproperty|location|object|string|talent|vector|void|json|sqlquery|cassowary)\b (?(1)([a-zA-Z0-9_]+)|)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.modifier.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.built-in.nss</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>constant.language.nss</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(struct)\b \b([a-zA-Z_][a-zA-Z0-9_]*\b(?!\s*\())</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.built-in.nss</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.struct-defined.nss</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>string_escaped_char</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?x)\\ (
\\			 |
[abefnprtv'"?]   |
[0-3]\d{,2}	 |
[4-7]\d?		|
x[a-fA-F0-9]{,2} |
u[a-fA-F0-9]{,4} |
U[a-fA-F0-9]{,8} )</string>
            <key>name</key>
            <string>constant.character.escape.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\\.</string>
            <key>name</key>
            <string>invalid.illegal.unknown-escape.nss</string>
          </dict>
        </array>
      </dict>
      <key>string_placeholder</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?x) %
(\d+\$)?						   # field (argument #)
[#0\- +']*						  # flags
[,;:_]?							  # separator character (AltiVec)
((-?\d+)|\*(-?\d+\$)?)?		  # minimum field width
(\.((-?\d+)|\*(-?\d+\$)?)?)?	# precision
(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier
[diouxXDOUeEfFgGaACcSspn%]		   # conversion type</string>
            <key>name</key>
            <string>constant.other.placeholder.nss</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(%)(?!"\s*(PRI|SCN))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.placeholder.nss</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>strings</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>"</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>"</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.double.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string_escaped_char</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string_placeholder</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#line_continuation_character</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>'</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.nss</string>
              </dict>
            </dict>
            <key>end</key>
            <string>'</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.nss</string>
              </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.single.nss</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string_escaped_char</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#line_continuation_character</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>switch_conditional_parentheses</key>
      <dict>
        <key>name</key>
        <string>meta.conditional.switch.nss</string>
        <key>begin</key>
        <string>((?&gt;(?:(?:(?&gt;(?&lt;!\s)\s+)|(\/\*)((?&gt;(?:[^\*]|(?&gt;\*+)[^\/])*)((?&gt;\*+)\/)))+|(?:(?:(?:(?:\b|(?&lt;=\W))|(?=\W))|\A)|\Z))))(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#inline_comment</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss punctuation.definition.comment.begin.nss</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss</string>
          </dict>
          <key>4</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>\*\/</string>
                <key>name</key>
                <string>comment.block.nss punctuation.definition.comment.end.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\*</string>
                <key>name</key>
                <string>comment.block.nss</string>
              </dict>
            </array>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.parens.begin.bracket.round.conditional.switch.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\))</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.parens.end.bracket.round.conditional.switch.nss</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#evaluation_context</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#nwscript_conditional_context</string>
          </dict>
        </array>
      </dict>
      <key>switch_statement</key>
      <dict>
        <key>name</key>
        <string>meta.block.switch.nss</string>
        <key>begin</key>
        <string>(((?&gt;(?:(?:(?&gt;(?&lt;!\s)\s+)|(\/\*)((?&gt;(?:[^\*]|(?&gt;\*+)[^\/])*)((?&gt;\*+)\/)))+|(?:(?:(?:(?:\b|(?&lt;=\W))|(?=\W))|\A)|\Z))))((?&lt;!\w)switch(?!\w)))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.head.switch.nss</string>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#inline_comment</string>
              </dict>
            </array>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss punctuation.definition.comment.begin.nss</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>comment.block.nss</string>
          </dict>
          <key>5</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>\*\/</string>
                <key>name</key>
                <string>comment.block.nss punctuation.definition.comment.end.nss</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\*</string>
                <key>name</key>
                <string>comment.block.nss</string>
              </dict>
            </array>
          </dict>
          <key>6</key>
          <dict>
            <key>name</key>
            <string>keyword.control.switch.nss</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?:(?&lt;=\}|%&gt;|\?\?&gt;)|(?=[;&gt;\[\]=]))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.head.switch.nss</string>
            <key>begin</key>
            <string>\G ?</string>
            <key>end</key>
            <string>((?:\{|&lt;%|\?\?&lt;|(?=;)))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.begin.bracket.curly.switch.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#switch_conditional_parentheses</string>
              </dict>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.body.switch.nss</string>
            <key>begin</key>
            <string>(?&lt;=\{|&lt;%|\?\?&lt;)</string>
            <key>end</key>
            <string>(\}|%&gt;|\?\?&gt;)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.block.end.bracket.curly.switch.nss</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#default_statement</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#case_statement</string>
              </dict>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#block_innards</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.tail.switch.nss</string>
            <key>begin</key>
            <string>(?&lt;=\}|%&gt;|\?\?&gt;)[\s\n]*</string>
            <key>end</key>
            <string>[\s\n]*(?=;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>