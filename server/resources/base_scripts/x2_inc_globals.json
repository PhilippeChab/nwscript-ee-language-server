{
    "complexTokens": [
        {
            "position": {
                "line": 2,
                "character": 13
            },
            "identifier": "DB_NAME",
            "tokenType": 21,
            "valueType": "string",
            "value": "\"XP2\""
        },
        {
            "position": {
                "line": 7,
                "character": 5
            },
            "identifier": "SetGlobalInt",
            "tokenType": 3,
            "returnType": "void",
            "params": [
                {
                    "position": {
                        "line": 7,
                        "character": 25
                    },
                    "identifier": "sVarName",
                    "tokenType": 25,
                    "valueType": "string"
                },
                {
                    "position": {
                        "line": 7,
                        "character": 39
                    },
                    "identifier": "nValue",
                    "tokenType": 25,
                    "valueType": "int"
                }
            ],
            "comments": [
                "// * Wrapper function for setting important variables in Chapter 2",
                "// * This will eventually be modified to set the variables on the",
                "// * database."
            ]
        },
        {
            "position": {
                "line": 11,
                "character": 4
            },
            "identifier": "GetGlobalInt",
            "tokenType": 3,
            "returnType": "int",
            "params": [
                {
                    "position": {
                        "line": 11,
                        "character": 24
                    },
                    "identifier": "sVarName",
                    "tokenType": 25,
                    "valueType": "string"
                }
            ],
            "comments": [
                "// * Wrapper function for setting important variables in Chapter 2",
                "// * This will eventually be modified to set the variables on the",
                "// * database."
            ]
        },
        {
            "position": {
                "line": 15,
                "character": 5
            },
            "identifier": "SetGlobalString",
            "tokenType": 3,
            "returnType": "void",
            "params": [
                {
                    "position": {
                        "line": 15,
                        "character": 28
                    },
                    "identifier": "sVarName",
                    "tokenType": 25,
                    "valueType": "string"
                },
                {
                    "position": {
                        "line": 15,
                        "character": 45
                    },
                    "identifier": "sValue",
                    "tokenType": 25,
                    "valueType": "string"
                }
            ],
            "comments": [
                "// * Wrapper function for setting important variables in Chapter 2",
                "// * This will eventually be modified to set the variables on the",
                "// * database."
            ]
        },
        {
            "position": {
                "line": 19,
                "character": 7
            },
            "identifier": "GetGlobalString",
            "tokenType": 3,
            "returnType": "string",
            "params": [
                {
                    "position": {
                        "line": 19,
                        "character": 30
                    },
                    "identifier": "sVarName",
                    "tokenType": 25,
                    "valueType": "string"
                }
            ],
            "comments": [
                "// * Wrapper function for setting important variables in Chapter 2",
                "// * This will eventually be modified to set the variables on the",
                "// * database."
            ]
        },
        {
            "position": {
                "line": 22,
                "character": 5
            },
            "identifier": "ClearDatabase",
            "tokenType": 3,
            "returnType": "void",
            "params": [],
            "comments": [
                "// * Only needed while things are being implemented",
                "// * Should be called ????;"
            ]
        },
        {
            "position": {
                "line": 24,
                "character": 5
            },
            "identifier": "CopyVariableIntToDatabase",
            "tokenType": 3,
            "returnType": "void",
            "params": [
                {
                    "position": {
                        "line": 24,
                        "character": 38
                    },
                    "identifier": "sVar",
                    "tokenType": 25,
                    "valueType": "string"
                }
            ],
            "comments": [
                "// * Copies the specified variable from the Module to the database"
            ]
        },
        {
            "position": {
                "line": 27,
                "character": 5
            },
            "identifier": "CopyAllHenchmen",
            "tokenType": 3,
            "returnType": "void",
            "params": [
                {
                    "position": {
                        "line": 27,
                        "character": 28
                    },
                    "identifier": "oPlayer",
                    "tokenType": 25,
                    "valueType": "object"
                }
            ],
            "comments": [
                "// * Copies all henchmen over",
                "// *"
            ]
        },
        {
            "position": {
                "line": 30,
                "character": 5
            },
            "identifier": "RestoreAllHenchmen",
            "tokenType": 3,
            "returnType": "void",
            "params": [
                {
                    "position": {
                        "line": 30,
                        "character": 33
                    },
                    "identifier": "lLoc",
                    "tokenType": 25,
                    "valueType": "location"
                },
                {
                    "position": {
                        "line": 30,
                        "character": 46
                    },
                    "identifier": "oPlayer",
                    "tokenType": 25,
                    "valueType": "object"
                }
            ],
            "comments": [
                "// * Restore henchmen. THis function should be called after all other",
                "// * database fetches because it destroys the database."
            ]
        },
        {
            "position": {
                "line": 33,
                "character": 5
            },
            "identifier": "CallForthHenchman",
            "tokenType": 3,
            "returnType": "void",
            "params": [
                {
                    "position": {
                        "line": 33,
                        "character": 30
                    },
                    "identifier": "sTag",
                    "tokenType": 25,
                    "valueType": "string"
                },
                {
                    "position": {
                        "line": 33,
                        "character": 43
                    },
                    "identifier": "sMemory",
                    "tokenType": 25,
                    "valueType": "string"
                }
            ],
            "comments": [
                "// * Call this function as a wrapper for retrieving a henchman from hell",
                "// * the henchmen should have been loaded in"
            ]
        },
        {
            "position": {
                "line": 36,
                "character": 5
            },
            "identifier": "RestoreHenchmenVariables",
            "tokenType": 3,
            "returnType": "void",
            "params": [
                {
                    "position": {
                        "line": 36,
                        "character": 37
                    },
                    "identifier": "oHench",
                    "tokenType": 25,
                    "valueType": "object"
                }
            ],
            "comments": [
                "// * ReStores all important variables that the",
                "// * the henchmen may have on them  from db"
            ]
        }
    ],
    "structComplexTokens": [],
    "children": [
        "x0_i0_henchman"
    ]
}